{{!--
Copyright 2017 ZeroEx Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
--}}
public {{this.name}} = {
    async sendTransactionAsync(
    {{> typed_params inputs=inputs}}
    {{#this.payable}}
        txData: TxDataPayable = {},
    {{/this.payable}}
    {{^this.payable}}
        txData: TxData = {},
    {{/this.payable}}
    ): Promise<string> {
        const self = this as {{contractName}}Contract;
        const txDataWithDefaults = await self._applyDefaultsToTxDataAsync(
            txData,
            self.{{this.name}}.estimateGasAsync.bind(
                self,
                {{> params inputs=inputs}}
            ),
        );
        const txHash = await promisify<string>(
            self._web3ContractInstance.{{this.name}}, self._web3ContractInstance,
        )(
            {{> params inputs=inputs}}
            txDataWithDefaults,
        );
        return txHash;
    },
    async estimateGasAsync(
    {{> typed_params inputs=inputs}}
        txData: TxData = {},
    ): Promise<number> {
        const self = this as {{contractName}}Contract;
        const txDataWithDefaults = await self._applyDefaultsToTxDataAsync(
            txData,
        );
        const gas = await promisify<number>(
            self._web3ContractInstance.{{this.name}}.estimateGas, self._web3ContractInstance,
        )(
            {{> params inputs=inputs}}
            txDataWithDefaults,
        );
        return gas;
    },
    getABIEncodedTransactionData(
    {{> typed_params inputs=inputs}}
        txData: TxData = {},
    ): string {
        const self = this as {{contractName}}Contract;
        const abiEncodedTransactionData = self._web3ContractInstance.{{this.name}}.getData();
        return abiEncodedTransactionData;
    },
};
